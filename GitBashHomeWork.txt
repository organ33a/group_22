Linux terminal (GitBash) commands

1) посмотреть, где я: pwd

2) Создать папку: mkdir f0

3) Зайти в папку: cd f0 или cd !$ (переход в только что созданную папку) 

4) Создать 3 папки: mkdir -p f1 f2 f3

5) Зайти в любую папку: cd f1

6) Создать 5 файлов (3 txt, 2 json): touch 1tf.txt 2tf.txt 3tf.txt 1jf.json 2jf.json

7) Создать 3 папки: mkdir -p f11 f12 f13

8. Вывести список содержимого папки: 
ls -la
ls -l
ll


9) + Открыть любой txt файл: vim 1tf.txt

10) + написать туда что-нибудь, любой текст: insert something, any text

11) + сохранить и выйти: escape :wq enter

12) Выйти из папки на уровень выше: cd ..

13) переместить любые 2 файла, которые вы создали, в любую другую папку: mv {1jf.json,2jf.json} f11

14) скопировать любые 2 файла, которые вы создали, в любую другую папку: cp {2tf.txt,3tf.txt} f12
									 cp {2tf.txt,3tf.txt} D:/Study/GitBashHW/f0/f2
15) Найти файл по имени: find -name 1tf.txt 

16) просмотреть содержимое в реальном времени (команда grep) изучите как она работает
grep any 1tf.txt

// ??tail -f

//grep my_regex my_file: выполняет поиск my_regex в my_file. При обнаружении совпадений возвращается, для каждого из них, вся строка. По умолчанию my_regex воспринимается как регулярное выражение.

//grep -i my_regex my_file: поиск выполняется без учёта регистра символов.

//grep -v my_regex my_file: возвращает все строки, в которых не содержится my_regex. Флаг -v означает инверсию, он напоминает оператор NOT, имеющийся во многих языках программирования.

//grep -c my_regex my_file: возвращает сведения о количестве совпадений с искомым шаблоном, найденных в файле.

//grep -R my_regex my_folder: выполняет рекурсивный поиск во всех файлах, находящихся в заданной папке и в папках, вложенных в неё.


17) вывести несколько первых строк из текстового файла: head -n 3 1tf.txt

18) вывести несколько последних строк из текстового файла: tail -n 2 1tf.txt

19) просмотреть содержимое длинного файла (команда less) изучите как она работает
less 1tf.txt 
выход - q

20) вывести дату и время: date 
date -u -  UTC время по Гринвичу
echo "Количество дней, прошедших с начала года: `date +%j`"






Задание *
1) Отправить http запрос на сервер.
curl -i -X OPTIONS https://api.quarantine.country/api/v1/regions
curl -k -X OPTIONS https://api.quarantine.country/api/v1/regions

https://api.quarantine.country/api/v1/regions


2) Написать скрипт который выполнит автоматически пункты 3, 4, 5, 6, 7, 8, 13

создала файл skr со следующим текстом внутри:

#!/bin/bash
cd f1
mkdir -p s1 s2 s3
cd s1
touch s1t.txt s2t.txt s3t.txt s1j.json s2j.json
mkdir -p s11 s12 s13
ls -ls
mv {s1j.json,s2j.json} s11 

Сделала файл исполняемым: 
chmod +x ./skr

Запустила:
./skr

